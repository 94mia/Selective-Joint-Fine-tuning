name: "AlexNet"
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 224
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
  }
  image_data_param {
    source: "/home/wfge/image_database/imagenet_for_retrieval.txt"
    batch_size: 100
    new_height: 256
    new_width: 256
    is_color: true
    shuffle: false
    root_folder: "/home/wfge/image_database/"
  }
}

layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: true
    crop_size: 224
    mean_file: "data/ilsvrc12/imagenet_mean.binaryproto"
  }
  image_data_param {
    source: "/home/wfge/image_database/imagenet_for_retrieval.txt"
    batch_size: 10
    new_height: 256
    new_width: 256
    is_color: true
    shuffle: false
    root_folder: "/home/wfge/image_database/"
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1_ru"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1_ru"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
  }
}
layer {
  name: "hist_feature"
  type: "RefinedHistFeature"
  bottom: "conv1"
  bottom: "conv2"
  bottom: "label"
  top: "feat_stats"
  hist_feature_param{
    feature_statistics_path: "examples/cvpr2017/mit67/image_retrieval/feature_extraction/mit67_alexnet_color_conv11_5_feature_stats_domain.txt"
	scales: 2
	total_channels: 352
	bin: 100
    feature_path: ""
    channel_weight: 0.5
	channel_weight: 0.5
	channel_weight_path: "examples/cvpr2017/mit67/image_retrieval/feature_extraction/alexnet_color_conv11_conv5_channel_weights.txt"
  }
  propagate_down: 0
  propagate_down: 0
  propagate_down: 0
}

layer {
  name: "knn_match"
  type: "NormalKnnMatch"
  bottom: "feat_stats"
  bottom: "label"
  top: "knn"
  knn_match_param {
    sample_num: 5360
	feature_num: 5360
    dim: 35200
    nodes_num: 5000
    orientation: 6
    scale: 2 
    bin: 100
    feature_path: "examples/cvpr2017/mit67/image_retrieval/feature_extraction/mit67_alexnet_color_conv11_conv5_feature_train.txt"
    image_retrieval_result: "examples/cvpr2017/mit67/image_retrieval/knn_searching/mit67_train_alexnet_color_conv11_5_retrieval_results.txt"
    iterations: 1000
	channel_weight_path: "examples/cvpr2017/mit67/image_retrieval/feature_extraction/alexnet_color_conv11_conv5_channel_weights.txt"
  }
  propagate_down: 0
  propagate_down: 0
  include {
    phase: TRAIN
  }
}

layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "knn"
  top: "ip"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  propagate_down: 0
  include {
    phase: TRAIN
  }
}

layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "feat_stats"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  propagate_down: 0
  include {
    phase: TEST
  }
}

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip"
  bottom: "label"
  top: "loss"
    include {
    phase: TRAIN
  }
}